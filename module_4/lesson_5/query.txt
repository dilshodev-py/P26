-- primary key : not null , unique , index


-- create table authors(
--     id uuid primary key default gen_random_uuid(),
--     first_name varchar(255),
--     last_name varchar(255),
--     age varchar(255)
-- );

-- alter table authors drop column age;
-- alter table authors add column age integer;
--
-- create table books(
--     id uuid primary key default gen_random_uuid(),
--     name varchar(255),
--     author_id uuid references authors(id) on delete CASCADE
-- );



-- select generate_series from generate_series(1, 500000);

-- insert into authors (first_name, last_name, age)
-- select md5(generate_series::varchar) , md5(generate_series::varchar) , generate_series
-- from generate_series(1, 500000);
--
-- insert into books (name , author_id)
-- select md5(generate_series::varchar) , 'f6449c76-c938-4492-82fe-84571e650c85'
-- from generate_series(1, 1000000);
--
--
--
-- create index authors_first_name on authors(first_name);
--
-- truncate table authors cascade ;
-- truncate table books;

-- CREATE SEQUENCE IF NOT EXISTS  cars_id_sequence
--     AS bigint
--     increment 1;

-- drop sequence cars_id_sequence;


-- select nextval('cars_id_sequence');
-- sequence
-- serial : int , sequence

-- create table cars(
--     id integer primary key default nextval('cars_id_sequence'),
--     name varchar(255)
-- );

-- insert into cars(name)
-- values ('Nexia'),
--        ('BMW');
--
-- alter sequence cars_id_sequence restart ;

create view top_by_category as
select c.name , sum(p.amount) amount_sum from category c
join film_category fc on c.category_id = fc.category_id
join public.film f on f.film_id = fc.film_id
join public.inventory i on f.film_id = i.film_id
join public.rental r on i.inventory_id = r.inventory_id
join public.payment p on r.rental_id = p.rental_id
group by c.category_id
order by amount_sum limit 1;